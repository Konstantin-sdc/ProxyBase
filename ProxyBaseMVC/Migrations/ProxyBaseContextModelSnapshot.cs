// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProxyBaseMVC.Data;

namespace ProxyBaseMVC.Migrations
{
    [DbContext(typeof(ProxyBaseContext))]
    partial class ProxyBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProxyBaseModels.CityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MayorModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MayorModelId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ProxyBaseModels.PersonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ProxyBaseModels.ProtocolModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProtocolsGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProxyModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProxyModelId");

                    b.ToTable("Protocols");
                });

            modelBuilder.Entity("ProxyBaseModels.ProxyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityModelId")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsWork")
                        .HasColumnType("bit");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<int?>("ResponseTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityModelId");

                    b.ToTable("Proxies");
                });

            modelBuilder.Entity("ProxyBaseModels.CityModel", b =>
                {
                    b.HasOne("ProxyBaseModels.PersonModel", "MayorModel")
                        .WithMany()
                        .HasForeignKey("MayorModelId");
                });

            modelBuilder.Entity("ProxyBaseModels.ProtocolModel", b =>
                {
                    b.HasOne("ProxyBaseModels.ProxyModel", null)
                        .WithMany("ProtocolModels")
                        .HasForeignKey("ProxyModelId");
                });

            modelBuilder.Entity("ProxyBaseModels.ProxyModel", b =>
                {
                    b.HasOne("ProxyBaseModels.CityModel", "CityModel")
                        .WithMany()
                        .HasForeignKey("CityModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
